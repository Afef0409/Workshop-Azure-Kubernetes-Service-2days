name: 3. Deploy application

on:
  workflow_dispatch:

env:
  RG_NAME: "RG-AKS-Lab-10"
  CLUSTER_NAME: "AKS-Lab-10"

  NAMESPACE: "coolapi-namespace"
  NAMESERVICE: "coolapi-service"
 
  

jobs:
  Build-Manifest:
    runs-on: ubuntu-latest
    environment:
      name: Dev
      url: ${{ steps.ip-pub.outputs.service-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group ${{ env.RG_NAME }} --name ${{ env.CLUSTER_NAME }}

      - name: Modification des Build-Manifest
        run: |
          cd ./Lab_10/Manifest/
          sed -i -e "s/my-namespace/${{ env.NAMESPACE }}/g" ./namespace.yaml
          sed -i -e "s/my-namespace/${{ env.NAMESPACE }}/g" ./deployment.yaml
          sed -i -e "s/my-namespace/${{ env.NAMESPACE }}/g" ./service.yaml 

      - name: Deploy application
        run: |
          kubectl apply -f ./Lab_10/Manifest/namespace.yaml
          kubectl apply -f ./Lab_10/Manifest/deployment.yaml
          kubectl apply -f ./Lab_10/Manifest/service.yaml

      - name: Recuperation de IP Publique
        id: ip-pub
        run: |
          sleep 30s
          IP_SERVICE=$(kubectl get service --namespace=${{ env.NAMESPACE }} -o json | jq -r '.items[] | select(.metadata.name == "${{ env.NAMESERVICE }}") | .status.loadBalancer?|.ingress[]?|.ip')
          echo "$IP_SERVICE"
          echo "::set-output name=service-url::http://$IP_SERVICE"